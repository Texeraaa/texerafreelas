// SEO Test Script - Execute no console do navegador
// Copie e cole este c√≥digo no DevTools (F12 > Console)

console.log('üîç INICIANDO TESTES DE SEO...\n');

// 1. Testar Meta Tags
console.log('üìã META TAGS:');
const title = document.title;
const description = document.querySelector('meta[name="description"]')?.content;
const keywords = document.querySelector('meta[name="keywords"]')?.content;

console.log(`Title: ${title} (${title.length} chars)`);
console.log(`Description: ${description} (${description?.length} chars)`);
console.log(`Keywords: ${keywords}`);

// Valida√ß√µes
if (title.length < 30 || title.length > 60) {
  console.warn('‚ö†Ô∏è Title muito curto (<30) ou longo (>60)');
} else {
  console.log('‚úÖ Title com tamanho adequado');
}

if (!description || description.length < 120 || description.length > 160) {
  console.warn('‚ö†Ô∏è Description deve ter entre 120-160 caracteres');
} else {
  console.log('‚úÖ Description com tamanho adequado');
}

// 2. Testar Open Graph
console.log('\nüì± OPEN GRAPH:');
const ogTitle = document.querySelector('meta[property="og:title"]')?.content;
const ogDescription = document.querySelector('meta[property="og:description"]')?.content;
const ogImage = document.querySelector('meta[property="og:image"]')?.content;
const ogUrl = document.querySelector('meta[property="og:url"]')?.content;

console.log(`OG Title: ${ogTitle}`);
console.log(`OG Description: ${ogDescription}`);
console.log(`OG Image: ${ogImage}`);
console.log(`OG URL: ${ogUrl}`);

// 3. Testar Schema.org
console.log('\nüèóÔ∏è SCHEMA.ORG:');
const schemas = document.querySelectorAll('script[type="application/ld+json"]');
console.log(`Encontrados ${schemas.length} schemas:`);

schemas.forEach((schema, index) => {
  try {
    const data = JSON.parse(schema.innerHTML);
    console.log(`Schema ${index + 1}: ${data['@type']}`);
    console.log(data);
  } catch (e) {
    console.error(`‚ùå Erro no schema ${index + 1}:`, e);
  }
});

// 4. Testar Headers Sem√¢nticos
console.log('\nüìù ESTRUTURA DE HEADERS:');
const headers = document.querySelectorAll('h1, h2, h3, h4, h5, h6');
const headerStructure = {};

headers.forEach((header) => {
  const tag = header.tagName.toLowerCase();
  headerStructure[tag] = (headerStructure[tag] || 0) + 1;
});

console.log('Estrutura de headers:', headerStructure);

const h1Count = headerStructure.h1 || 0;
if (h1Count === 0) {
  console.warn('‚ö†Ô∏è Nenhum H1 encontrado');
} else if (h1Count > 1) {
  console.warn('‚ö†Ô∏è M√∫ltiplos H1 encontrados');
} else {
  console.log('‚úÖ Estrutura de H1 adequada');
}

// 5. Testar Imagens
console.log('\nüñºÔ∏è IMAGENS:');
const images = document.querySelectorAll('img');
let imagesWithoutAlt = 0;

images.forEach((img) => {
  if (!img.alt || img.alt.trim() === '') {
    imagesWithoutAlt++;
  }
});

console.log(`Total de imagens: ${images.length}`);
console.log(`Imagens sem alt: ${imagesWithoutAlt}`);

if (imagesWithoutAlt > 0) {
  console.warn(`‚ö†Ô∏è ${imagesWithoutAlt} imagens sem alt text`);
} else {
  console.log('‚úÖ Todas as imagens t√™m alt text');
}

// 6. Testar Links
console.log('\nüîó LINKS:');
const externalLinks = document.querySelectorAll(
  'a[href^="http"]:not([href*="' + window.location.hostname + '"])'
);
let linksWithoutNoopener = 0;

externalLinks.forEach((link) => {
  if (!link.rel.includes('noopener')) {
    linksWithoutNoopener++;
  }
});

console.log(`Links externos: ${externalLinks.length}`);
console.log(`Links sem noopener: ${linksWithoutNoopener}`);

// 7. Performance B√°sica
console.log('\n‚ö° PERFORMANCE B√ÅSICA:');
console.log(`Tempo de carregamento: ${performance.now()}ms`);

// 8. Resumo
console.log('\nüìä RESUMO DOS TESTES:');
console.log('1. ‚úÖ Execute este script nas duas vers√µes (/ e /professional)');
console.log('2. ‚úÖ Teste as ferramentas online mencionadas');
console.log('3. ‚úÖ Verifique o Google Search Console ap√≥s deploy');
console.log('4. ‚úÖ Monitore Core Web Vitals');

console.log('\nüéâ TESTES CONCLU√çDOS!');
